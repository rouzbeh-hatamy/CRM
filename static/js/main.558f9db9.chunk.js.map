{"version":3,"sources":["assets/Fonts/Yekan.ttf","components/Input.js","components/Home/Home.jsx","components/Questions/Questions.jsx","view/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","info","organization_name","organization_name_fa","background","logo","Qs","id","text","options","key","Home","className","autoPlay","muted","loop","src","type","alt","to","makeStyles","root","color","display","height","alignItems","backgroundColor","active","circle","width","borderRadius","completed","zIndex","fontSize","ColorlibConnector","withStyles","alternativeLabel","top","backgroundImage","boxShadow","line","border","StepConnector","useColorlibStepIconStyles","justifyContent","ColorlibStepIcon","props","classes","clsx","1","2","3","String","icon","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","Questions","React","useState","activeStep","setActiveStep","results","setResults","steps","length","numberArray","i","push","getSteps","handleNext","cm","prevActiveStep","res","answer","Stepper","connector","map","label","Step","Math","random","StepLabel","StepIconComponent","Button","onClick","console","log","variant","index","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.558f9db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Yekan.e59513c8.ttf\";","const info = {\r\n    organization_name: 'Tap30',\r\n    organization_name_fa: 'تپسی',\r\n\r\n    background: 'https://dm0qx8t0i9gc9.cloudfront.net/watermarks/video/msqd2XJ/videoblocks-men-with-headset-working-in-call-center-in-modern-worldwide-office-he-talking-and-looking-on-screen-of-desktop-computer-solving-the-clients-problem_sp4zwt4kw__6307f53481a55090a8f07994dfc1f88e__P360.mp4',\r\n    logo: 'https://upload.wikimedia.org/wikipedia/commons/6/6b/Tapsi_new_logo.png',\r\n    Qs: [\r\n        {\r\n            id: 'q1',\r\n            text: 'آیا از خدمات تپسی راضی هستید؟',\r\n            options: [\r\n                { key: 1, text: 'بله' },\r\n                { key: 2, text: 'تا حدودی' },\r\n                { key: 3, text: 'خیر' }\r\n            ]\r\n        },\r\n        {\r\n            id: 'q2',\r\n            text: 'چه مقدار از زمان انتظار برای سفیر تپسی راضی هستید؟',\r\n            options: [\r\n                { key: 1, text: 'کم' },\r\n                { key: 2, text: 'تا حدودی' },\r\n                { key: 3, text: 'زیاد' }\r\n            ]\r\n        },\r\n        {\r\n            id: 'q3',\r\n            text: 'برخورد سفیر تپسی با شما چگونه بود؟',\r\n            options: [\r\n                { key: 1, text: 'دوستانه' },\r\n                { key: 2, text: 'عادی' },\r\n                { key: 3, text: 'رسمی' }\r\n            ]\r\n        },\r\n        {\r\n            id: 'q4',\r\n            text: 'آیا از وضعیت ظاهری خودروی سفیر راضی هستید؟',\r\n            options: [\r\n                { key: 1, text: 'بله' },\r\n                { key: 2, text: 'تا حدودی' },\r\n                { key: 3, text: 'خیر' }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nexport default info\r\n","import React from 'react'\r\nimport './home.scss'\r\nimport {Link} from \"react-router-dom\";\r\nimport info from '../Input'\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n        <video autoPlay muted className=\"bg-video\" loop>\r\n                <source src={info.background} type=\"video/mp4\" />\r\n                <source src=\"movie.ogg\" type=\"video/ogg\" />\r\n            </video>\r\n        <h1> فرم نظرسنجی و ارتقاء سطح خدمت رسانی</h1>\r\n            <img src={info.logo} alt=\"logo\" className=\"logo\"/>\r\n           <Link to=\"/questions\"> <button className=\"start\">شروع</button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './question.scss'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Check from '@material-ui/icons/Check';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Button from '@material-ui/core/Button';\r\nimport info from '../Input';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n    root: {\r\n        color: '#eaeaf0',\r\n        display: 'flex',\r\n        height: 22,\r\n        alignItems: 'center',\r\n        backgroundColor: '#023891',\r\n    },\r\n    active: {\r\n        color: '#784af4',\r\n    },\r\n    circle: {\r\n        width: 8,\r\n        height: 8,\r\n        borderRadius: '50%',\r\n        backgroundColor: 'currentColor',\r\n    },\r\n    completed: {\r\n        color: '#784af4',\r\n        zIndex: 1,\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nfunction QontoStepIcon(props) {\r\n    const classes = useQontoStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n            })}\r\n        >\r\n            {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n};\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( to right,rgb(240,138,93) 0%,rgb(184,59,94) 50%,rgb(240,138,93) 100%)',\r\n            boxShadow: '0 0px 9px 6px rgba(184, 59, 94, 0.56)',\r\n\r\n\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( to right,rgb(240,138,93) 0%,rgb(184,59,94) 100%)',\r\n            boxShadow: '0 0px 9px 6px rgba(184, 59, 94, 0.56)',\r\n\r\n\r\n        },\r\n    },\r\n    line: {\r\n        height: 10,\r\n        border: 0,\r\n        borderRadius: 50,\r\n\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( to right,rgb(240,138,93) 0%,rgb(184,59,94) 100%)',\r\n        boxShadow: '0 0px 2px 6px rgba(184, 59, 94, 0.56)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( to right,rgb(240,138,93) 0%,rgb(184,59,94) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: '',\r\n        2: '',\r\n        3: '',\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction getSteps() {\r\n    let steps = info.Qs.length;\r\n\r\n    var numberArray = [];\r\n\r\n    for (var i = 1; i <= steps; i++) {\r\n        numberArray.push('');\r\n    }\r\n\r\n    return numberArray;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Questions() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const [results, setResults] = React.useState([]);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = (cm) => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n        let res = { id: info.Qs[activeStep].id, answer: cm }\r\n        setResults([...results, res])\r\n    };\r\n\r\n\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    const handleResults = () => {\r\n        console.log(results);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <video autoPlay className=\"bg-video blur\" loop>\r\n                <source src={info.background} type=\"video/mp4\" />\r\n                <source src=\"movie.ogg\" type=\"video/ogg\" />\r\n            </video>\r\n\r\n            <div className=\"stepper-div\">\r\n                <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\r\n                    {steps.map((label) => (\r\n                        <Step key={Math.random()}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n            </div>\r\n\r\n            {activeStep === steps.length ? (\r\n                <div className=\"finished\">\r\n                    <h1> با تشکر از زمانی که صرف پاسخگویی به سوالات کردید</h1>\r\n                    <img src={info.logo} alt=\"logo\" className=\"finished-logo\" />\r\n                    <Link to=\"/home\"><Button onClick={handleResults} className={classes.button}>\r\n                        ارسال\r\n            </Button></Link>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                        شروع دوباره\r\n            </Button>\r\n                </div>\r\n            )\r\n                :\r\n                (\r\n                    <div className=\"Qs-on\">\r\n                        <h1>\r\n                            {info.Qs[activeStep].text}\r\n                        </h1>\r\n\r\n                        <div>\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n\r\n                                onClick={() => handleNext(info.Qs[activeStep].options[0].key)}\r\n                                className={`btn1 ${classes.button}`}\r\n                            >{info.Qs[activeStep].options[0].text}</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n\r\n                                onClick={() => handleNext(info.Qs[activeStep].options[1].key)}\r\n                                className={`btn2 ${classes.button}`}\r\n                            >{info.Qs[activeStep].options[1].text}</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n\r\n                                onClick={() => handleNext(info.Qs[activeStep].options[2].key)}\r\n                                className={`btn3 ${classes.button}`}\r\n                            >{info.Qs[activeStep].options[2].text}</Button>\r\n                            <img src={info.logo} alt=\"logo\" className=\"bottom-logo\" />\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './index.scss'\r\nimport Home from '../components/Home/Home'\r\nimport Questions from '../components/Questions/Questions';\r\n\r\nfunction index() {\r\n    return (\r\n        <div className=\"container\">\r\n            \r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/questions\">\r\n                        <Questions/>\r\n                    </Route>\r\n                    <Route path=\"/finish\"></Route>\r\n                    <Route path=\"/\">\r\n                        <Home />\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react';\nimport Index from './view'\nfunction App() {\n  return (\n    <>\n      <Index />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './assets/Fonts/Yekan.ttf'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}